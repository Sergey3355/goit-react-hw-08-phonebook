{"version":3,"file":"static/js/655.39fc894c.chunk.js","mappings":"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","sources":["redux/Operation/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactForm.module.css?4021","components/Contacts/Contacts.js","components/Form/Form.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/Form/Form.js","components/Wrapper/Wrapper.js","components/Loader/Loader.js","components/UserCreate/UserContacts/UserContactsForm.js"],"sourcesContent":["export const addNewContacts = state => {\n  return state.contacts.items;\n};\nexport const isLoadingContacts = state => {\n  return state.contacts.isLoading;\n};\nexport const errorContacts = state => {\n  return state.contacts.error;\n};\n\nexport const getFilteredContacts = state => {\n  return state.filter;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__mk7oA\",\"label\":\"ContactForm_label__PqKiW\",\"input\":\"ContactForm_input__05fF1\",\"btn\":\"ContactForm_btn__xMrHz\",\"info\":\"ContactForm_info__NZcGr\"};","import { deleteContacts } from \"redux/Operation/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewContacts, getFilteredContacts } from \"redux/Operation/selectors\";\nimport s from './ContactForm.module.css'\n\n  const filterContacts = (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact=>\n       contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\nexport default function Contacts() {\n    const items = useSelector(addNewContacts);\n    const filter = useSelector(getFilteredContacts);\n    const filteredItems = filterContacts(items, filter);\n\n    const dispatch = useDispatch();\n        const deleteContact = uniqueId => {\n        dispatch(deleteContacts(uniqueId));\n    }\n    return (\n        <>\n            <h2>Contacts</h2>\n            <ul>\n            {filteredItems.map(({id,name,number}) => (\n                <li className={s.info} key={id}>{name} : {number}\n                    <div>\n                        <button className={s.btn}\n                            type=\"button\"\n                            onClick={() => {deleteContact(id) }}\n                        >\n                                         <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                fill=\"currentColor\"\n                className=\"bi bi-trash\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n              </svg></button> \n                    </div>\n                </li>    \n            ))}\n            </ul>\n        </>\n    )\n}\n","import styled from \"styled-components\";\n\n\nexport const Forma = styled.form`\n  margin-bottom: 30px;\n    margin-top: 30px;\n    `\n    export const Label = styled.label`\n            display: block;\n    font-size: 15px;\n    font-weight: 600;\n    margin-top: 10px;\n     `\nexport const Input = styled.input`\n        display: block;\n    font-size: 15px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n    padding: 10px;\n    width: 100%;\n `\n export const Button = styled.button`\n   background-color: blue;\n    border: none;\n    border-radius: 1em;\n    box-shadow: 0 11px 7px rgba(0,0,0,.15);\n    color: #fff;\n    cursor: pointer;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n    outline: none;\n    padding: 10px;\n    transition: all .4s ease;\n    &:hover{\n      background: green;\n    box-shadow: 0 11px 7px rgba(60,215,158,.15);\n    }\n `\n ","import styled from \"styled-components\";\n\n\n\nexport const Input = styled.input`\n display: block;\n  padding: 10px;\n  width: 100%;\n  font-size: 15px;\n  margin-top: 15px;\n `\n export const Label = styled.label`\n      display: block;\n  font-weight: 500;\n  font-size: 20px;\n `\n","import { Label } from \"components/Form/Form.styled\"\nimport { Input } from \"./Filter.styled\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilteredContacts } from \"../../redux/Operation/selectors\";\nimport { filterContactsAction } from \"../../redux/Operation/filter.slice\";\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilteredContacts);\n\n    const chooseFilterContact = (evt) => {\n        dispatch(filterContactsAction(evt.target.value ));\n  }\n    return (\n        \n        <>\n        <Label>Find contacts by name</Label>\n        <Input\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -]\n            [a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"May contain only letters\"\n            value={filter}\n            onChange={chooseFilterContact}\n            required />\n            </>\n      \n    )\n}","import { Forma,Input,Label,Button } from './Form.styled'\nimport { useState } from 'react'\nimport { addNewContacts } from 'redux/Operation/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/Operation/operations';\n\nexport default function Form() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const items = useSelector(addNewContacts);\n\n    const inputAddedName = evt => {\n        const { name, value } = evt.target;\n        if (name === 'name') {\n            setName(value);\n        } else if (name === 'number') {\n            setNumber(value);\n        }\n    };\n\n    const onSubmitForm = evt => {\n        evt.preventDefault();\n        const newContact = {name: name,number: number};\n            if (items.length === 0) {\n                dispatch(addContacts(newContact));\n                resetForm();\n        return;\n        } else {\n        const existingContacts = \n        items.findIndex(itemContacts =>\n            newContact.name === itemContacts.name) !==-1;\n        if(existingContacts){\n        alert(`${newContact.name} is already in contacts.`)\n        return;\n        }\n            dispatch(addContacts(newContact));\n            resetForm();\n        }\n    };\n\n    const resetForm = () => {\n        setName('');setNumber('');\n    };\n\n    return (\n   \n            <Forma onSubmit={onSubmitForm}>\n                <Label>Name</Label>\n                <Input\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    placeholder=\"First Name Last Name\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"May contain only letters\"\n                    value={name}\n                    onChange={inputAddedName}\n                    required \n                    />\n                <br />\n                <Label>Number</Label>\n                <Input\n                    autoComplete=\"off\"\n                    placeholder=\"111-11-11\"\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"May contain only number\"\n                    value={number}\n                    onChange={inputAddedName}\n                    required />\n\n                <br />\n                <Button type=\"submit\">Add Contact</Button>\n            </Forma>\n     \n    );\n}\n","\nimport PropTypes from 'prop-types';\n\nexport default function WrapperForPhonebook({ children }) {\n    return (\n        <section>\n            <span>Phonebook</span>\n            {children}\n        </section > \n    )\n}\nWrapperForPhonebook.propTypes = {\n    children: PropTypes.node.isRequired,\n}","import { ProgressBar } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ProgressBar\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#F4442E\"\n      barColor=\"#51E5FF\"\n    />\n  );\n};\n","import { Container } from \"../../App.styled\";\nimport Contacts from \"components/Contacts\";\nimport Filter from \"components/Filter\";\nimport Form from \"components/Form\";\nimport WrapperForPhonebook from \"components/Wrapper/Wrapper\";\nimport { STATUS } from \"../../Status/costants.status\";\nimport { addNewContacts, isLoadingContacts } from 'redux/Operation/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from \"components/Loader/Loader\";\nimport { getContacts } from \"redux/Operation/operations\";\nimport { useEffect } from \"react\";\n\nconst UserContactsForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(addNewContacts);\n  const isLoading = useSelector(isLoadingContacts);\n  \n    useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n  \n    return (\n            <Container>\n        <WrapperForPhonebook>\n        <Form/> \n          {isLoading === STATUS.loading ||\n            isLoading === STATUS.idle ?\n            <Loader /> : \"\"}\n            {items.length === 0 ? '' :\n              <>\n            <Filter />\n            <Contacts/>\n              </> }\n        </WrapperForPhonebook>\n    </Container>\n    )\n}\nexport default UserContactsForm;"],"names":["addNewContacts","state","contacts","items","isLoadingContacts","isLoading","getFilteredContacts","filter","Contacts","filteredItems","normalizedFilter","toLowerCase","contact","name","includes","filterContacts","useSelector","dispatch","useDispatch","map","id","number","className","s","type","onClick","uniqueId","deleteContacts","xmlns","width","height","fill","viewBox","d","Forma","styled","Label","Input","Button","Filter","autoComplete","pattern","title","value","onChange","evt","filterContactsAction","target","required","Form","useState","setName","setNumber","inputAddedName","resetForm","onSubmit","preventDefault","newContact","length","addContacts","findIndex","itemContacts","alert","placeholder","WrapperForPhonebook","children","Loader","ariaLabel","wrapperClass","borderColor","barColor","useEffect","getContacts","STATUS"],"sourceRoot":""}